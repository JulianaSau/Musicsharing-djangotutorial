<!DOCTYPE html>
<html lang="en"><link type="text/css" id="dark-mode" rel="stylesheet" href=""><style type="text/css" id="dark-mode-custom-style"></style><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
        <meta charset="UTF-8">
        <title>Django ORM (Querysets) Â· HonKit</title>
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <meta name="description" content="">
        <meta name="generator" content="HonKit 3.6.20">
        
        
        
    
    <style class="anchorjs"></style><link rel="stylesheet" href="Django%20ORM%20(Querysets)%20%C2%B7%20HonKit_files/style.css">

    
            
                
                <link rel="stylesheet" href="Django%20ORM%20(Querysets)%20%C2%B7%20HonKit_files/plugin.css">
                
            
                
                <link rel="stylesheet" href="Django%20ORM%20(Querysets)%20%C2%B7%20HonKit_files/plugin_002.css">
                
            
                
                <link rel="stylesheet" href="Django%20ORM%20(Querysets)%20%C2%B7%20HonKit_files/sidebar-ad.css">
                
            
                
                <link rel="stylesheet" href="Django%20ORM%20(Querysets)%20%C2%B7%20HonKit_files/block.css">
                
            
                
                <link rel="stylesheet" href="Django%20ORM%20(Querysets)%20%C2%B7%20HonKit_files/bootstrap.css">
                
            
                
                <link rel="stylesheet" href="Django%20ORM%20(Querysets)%20%C2%B7%20HonKit_files/sectionx.css">
                
            
                
                <link rel="stylesheet" href="Django%20ORM%20(Querysets)%20%C2%B7%20HonKit_files/website_003.css">
                
            
                
                <link rel="stylesheet" href="Django%20ORM%20(Querysets)%20%C2%B7%20HonKit_files/search.css">
                
            
                
                <link rel="stylesheet" href="Django%20ORM%20(Querysets)%20%C2%B7%20HonKit_files/website.css">
                
            
        

    

    
        
        <link rel="stylesheet" href="Django%20ORM%20(Querysets)%20%C2%B7%20HonKit_files/website_002.css">
        
    
        
    
        
    
        
    
        
    
        
    

        
    
    
    <meta name="HandheldFriendly" content="true">
    <meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <link rel="apple-touch-icon-precomposed" sizes="152x152" href="https://tutorial.djangogirls.org/gitbook/images/apple-touch-icon-precomposed-152.png">
    <link rel="shortcut icon" href="https://tutorial.djangogirls.org/gitbook/images/favicon.ico" type="image/x-icon">

    
    
    
    
    
    

    <link rel="prev" href="https://tutorial.djangogirls.org/en/html/"><link rel="next" href="https://tutorial.djangogirls.org/en/dynamic_data_in_templates/"></head>
    <body>
        
<div class="book without-animation with-summary font-size-2 font-family-1">
    <div class="book-summary">
        
  
            
<div id="book-search-input" role="search">
    <input type="text" placeholder="Type to search">
</div>

            
                <nav role="navigation">
                


<ul class="summary">
    
    
    
        
        <li>
            <a href="https://gitter.im/DjangoGirls/tutorial" target="_blank" class="custom-link">Need help? Talk to us!</a>
        </li>
    
    

    
    <li class="divider"></li>
    

    
        
        
    
        <li class="chapter " data-level="1.1" data-path="../">
            
                <a href="https://tutorial.djangogirls.org/en/">
            
                    
                    Introduction
            
                </a>
            

            
        </li>
    
        <li class="chapter " data-level="1.2" data-path="../installation/">
            
                <a href="https://tutorial.djangogirls.org/en/installation/">
            
                    
                    Installation
            
                </a>
            

            
            <ul class="articles">
                
    
        <li class="chapter " data-level="1.2.1" data-path="../installation/" style="display: none;">
            
                <a href="https://tutorial.djangogirls.org/en/installation/#command-line">
            
                    
                    Command Line
            
                </a>
            

            
        </li>
    
        <li class="chapter " data-level="1.2.2" data-path="../installation/" style="display: none;">
            
                <a href="https://tutorial.djangogirls.org/en/installation/#python">
            
                    
                    Python
            
                </a>
            

            
        </li>
    
        <li class="chapter " data-level="1.2.3" data-path="../installation/" style="display: none;">
            
                <a href="https://tutorial.djangogirls.org/en/installation/#code-editor">
            
                    
                    Code Editor
            
                </a>
            

            
        </li>
    
        <li class="chapter " data-level="1.2.4" data-path="../installation/" style="display: none;">
            
                <a href="https://tutorial.djangogirls.org/en/installation/#virtualenv">
            
                    
                    Virtual Environment
            
                </a>
            

            
        </li>
    
        <li class="chapter " data-level="1.2.5" data-path="../installation/" style="display: none;">
            
                <a href="https://tutorial.djangogirls.org/en/installation/#django">
            
                    
                    Django
            
                </a>
            

            
        </li>
    
        <li class="chapter " data-level="1.2.6" data-path="../installation/" style="display: none;">
            
                <a href="https://tutorial.djangogirls.org/en/installation/#git">
            
                    
                    Git
            
                </a>
            

            
        </li>
    
        <li class="chapter " data-level="1.2.7" data-path="../installation/" style="display: none;">
            
                <a href="https://tutorial.djangogirls.org/en/installation/#github">
            
                    
                    GitHub
            
                </a>
            

            
        </li>
    
        <li class="chapter " data-level="1.2.8" data-path="../installation/" style="display: none;">
            
                <a href="https://tutorial.djangogirls.org/en/installation/#pythonanywhere">
            
                    
                    PythonAnywhere
            
                </a>
            

            
        </li>
    

            </ul>
            
        </li>
    
        <li class="chapter " data-level="1.3" data-path="../chromebook_setup/">
            
                <a href="https://tutorial.djangogirls.org/en/chromebook_setup/">
            
                    
                    Installation (chromebook)
            
                </a>
            

            
        </li>
    
        <li class="chapter " data-level="1.4" data-path="../how_the_internet_works/">
            
                <a href="https://tutorial.djangogirls.org/en/how_the_internet_works/">
            
                    
                    How the Internet works
            
                </a>
            

            
        </li>
    
        <li class="chapter " data-level="1.5" data-path="../intro_to_command_line/">
            
                <a href="https://tutorial.djangogirls.org/en/intro_to_command_line/">
            
                    
                    Introduction to command line
            
                </a>
            

            
        </li>
    
        <li class="chapter " data-level="1.6" data-path="../python_installation/">
            
                <a href="https://tutorial.djangogirls.org/en/python_installation/">
            
                    
                    Python installation
            
                </a>
            

            
        </li>
    
        <li class="chapter " data-level="1.7" data-path="../code_editor/">
            
                <a href="https://tutorial.djangogirls.org/en/code_editor/">
            
                    
                    Code editor
            
                </a>
            

            
        </li>
    
        <li class="chapter " data-level="1.8" data-path="../python_introduction/">
            
                <a href="https://tutorial.djangogirls.org/en/python_introduction/">
            
                    
                    Introduction to Python
            
                </a>
            

            
        </li>
    
        <li class="chapter " data-level="1.9" data-path="../django/">
            
                <a href="https://tutorial.djangogirls.org/en/django/">
            
                    
                    What is Django?
            
                </a>
            

            
        </li>
    
        <li class="chapter " data-level="1.10" data-path="../django_installation/">
            
                <a href="https://tutorial.djangogirls.org/en/django_installation/">
            
                    
                    Django installation
            
                </a>
            

            
        </li>
    
        <li class="chapter " data-level="1.11" data-path="../django_start_project/">
            
                <a href="https://tutorial.djangogirls.org/en/django_start_project/">
            
                    
                    Your first Django project!
            
                </a>
            

            
        </li>
    
        <li class="chapter " data-level="1.12" data-path="../django_models/">
            
                <a href="https://tutorial.djangogirls.org/en/django_models/">
            
                    
                    Django models
            
                </a>
            

            
        </li>
    
        <li class="chapter " data-level="1.13" data-path="../django_admin/">
            
                <a href="https://tutorial.djangogirls.org/en/django_admin/">
            
                    
                    Django admin
            
                </a>
            

            
        </li>
    
        <li class="chapter " data-level="1.14" data-path="../deploy/">
            
                <a href="https://tutorial.djangogirls.org/en/deploy/">
            
                    
                    Deploy!
            
                </a>
            

            
        </li>
    
        <li class="chapter " data-level="1.15" data-path="../django_urls/">
            
                <a href="https://tutorial.djangogirls.org/en/django_urls/">
            
                    
                    Django URLs
            
                </a>
            

            
        </li>
    
        <li class="chapter " data-level="1.16" data-path="../django_views/">
            
                <a href="https://tutorial.djangogirls.org/en/django_views/">
            
                    
                    Django views â time to create!
            
                </a>
            

            
        </li>
    
        <li class="chapter " data-level="1.17" data-path="../html/">
            
                <a href="https://tutorial.djangogirls.org/en/html/">
            
                    
                    Introduction to HTML
            
                </a>
            

            
        </li>
    
        <li class="chapter active" data-level="1.18" data-path="./">
            
                <a href="https://tutorial.djangogirls.org/en/django_orm/">
            
                    
                    Django ORM (Querysets)
            
                </a>
            

            
        </li>
    
        <li class="chapter " data-level="1.19" data-path="../dynamic_data_in_templates/">
            
                <a href="https://tutorial.djangogirls.org/en/dynamic_data_in_templates/">
            
                    
                    Dynamic data in templates
            
                </a>
            

            
        </li>
    
        <li class="chapter " data-level="1.20" data-path="../django_templates/">
            
                <a href="https://tutorial.djangogirls.org/en/django_templates/">
            
                    
                    Django templates
            
                </a>
            

            
        </li>
    
        <li class="chapter " data-level="1.21" data-path="../css/">
            
                <a href="https://tutorial.djangogirls.org/en/css/">
            
                    
                    CSS â make it pretty
            
                </a>
            

            
        </li>
    
        <li class="chapter " data-level="1.22" data-path="../template_extending/">
            
                <a href="https://tutorial.djangogirls.org/en/template_extending/">
            
                    
                    Template extending
            
                </a>
            

            
        </li>
    
        <li class="chapter " data-level="1.23" data-path="../extend_your_application/">
            
                <a href="https://tutorial.djangogirls.org/en/extend_your_application/">
            
                    
                    Extend your application
            
                </a>
            

            
        </li>
    
        <li class="chapter " data-level="1.24" data-path="../django_forms/">
            
                <a href="https://tutorial.djangogirls.org/en/django_forms/">
            
                    
                    Django Forms
            
                </a>
            

            
        </li>
    
        <li class="chapter " data-level="1.25" data-path="../whats_next/">
            
                <a href="https://tutorial.djangogirls.org/en/whats_next/">
            
                    
                    What's next?
            
                </a>
            

            
        </li>
    

    

    <li class="divider"></li>

    <li>
        <a href="https://github.com/honkit/honkit" target="blank" class="gitbook-link">
            Published with HonKit
        </a>
    </li>
</ul>


                </nav>
            
        
  <div class="sidebar-addition">
      
        <a href="https://www.patreon.com/djangogirls" target="_blank">
      
        <img src="Django%20ORM%20(Querysets)%20%C2%B7%20HonKit_files/lagos.jpg">
      
        </a>
      
      
        <p>ð Support our work and donate to our project! â¨</p>
      
      
      <a href="https://www.patreon.com/djangogirls" class="btn" target="_blank">
        Donate now!
      </a>
      
  </div>

    </div>

    <div class="book-body">
        
            <div class="body-inner">
                
                    

<div class="book-header" role="navigation">
    

    <!-- Title -->
    <a class="btn pull-left js-toolbar-action" aria-label="" href="#"><i class="fa fa-align-justify"></i></a><a class="btn pull-right js-toolbar-action" aria-label="GitHub" href="#"><i class="fa fa-github"></i></a><div class="dropdown pull-left language-picker js-toolbar-action"><a class="btn toggle-dropdown" aria-label="Change language" href="#"><i class="fa fa-globe"></i></a><div class="dropdown-menu dropdown-right"><div class="dropdown-caret"><span class="caret-outer"></span><span class="caret-inner"></span></div></div></div><div class="dropdown pull-left font-settings js-toolbar-action"><a class="btn toggle-dropdown" aria-label="Font Settings" href="#"><i class="fa fa-font"></i></a><div class="dropdown-menu dropdown-right"><div class="dropdown-caret"><span class="caret-outer"></span><span class="caret-inner"></span></div><div class="buttons"><button class="button size-2 font-reduce">A</button><button class="button size-2 font-enlarge">A</button></div><div class="buttons"><button class="button size-2 ">Serif</button><button class="button size-2 ">Sans</button></div><div class="buttons"><button class="button size-3 ">White</button><button class="button size-3 ">Sepia</button><button class="button size-3 ">Night</button></div></div></div><h1 id="django-orm-querysets">
        <i class="fa fa-circle-o-notch fa-spin"></i>
        <a href="https://tutorial.djangogirls.org/en/">Django ORM (Querysets)</a>
    <a class="anchorjs-link " href="#django-orm-querysets" aria-label="Anchor link for: django orm querysets" data-anchorjs-icon="#" style="padding-left: 0.375em;"></a></h1>
</div>




                    <div class="page-wrapper" tabindex="-1" role="main">
                        <div class="page-inner">
                            
<div id="book-search-results">
    <div class="search-noresults">
    
                                <section class="normal markdown-section">
                                
                                <h1 id="django-orm-and-querysets">Django ORM and QuerySets<a class="anchorjs-link " href="#django-orm-and-querysets" aria-label="Anchor link for: django orm and querysets" data-anchorjs-icon="#" style="padding-left: 0.375em;"></a></h1>
<p>In this chapter you'll learn how Django connects to the database and stores data in it. Let's dive in!</p>
<h2 id="what-is-a-queryset">What is a QuerySet?<a class="anchorjs-link " href="#what-is-a-queryset" aria-label="Anchor link for: what is a queryset" data-anchorjs-icon="#" style="padding-left: 0.375em;"></a></h2>
<p>A QuerySet is, in essence, a list of objects of a given Model. 
QuerySets allow you to read the data from the database, filter it and 
order it.</p>
<p>It's easiest to learn by example. Let's try this, shall we?</p>
<h2 id="django-shell">Django shell<a class="anchorjs-link " href="#django-shell" aria-label="Anchor link for: django shell" data-anchorjs-icon="#" style="padding-left: 0.375em;"></a></h2>
<p>Open up your local console (not on PythonAnywhere) and type this command:</p>
<p></p><p class="code-label">command-line</p><p></p>
<pre><code>(myvenv) ~/djangogirls$ python manage.py shell
</code></pre><p>The effect should be like this:</p>
<p></p><p class="code-label">command-line</p><p></p>
<pre><code class="lang-python">(InteractiveConsole)
&gt;&gt;&gt;
</code></pre>
<p>You're now in Django's interactive console. It's just like the Python
 prompt, but with some additional Django magic. :)  You can use all the 
Python commands here too.</p>
<h3 id="all-objects">All objects<a class="anchorjs-link " href="#all-objects" aria-label="Anchor link for: all objects" data-anchorjs-icon="#" style="padding-left: 0.375em;"></a></h3>
<p>Let's try to display all of our posts first. You can do that with the following command:</p>
<p></p><p class="code-label">command-line</p><p></p>
<pre><code class="lang-python"><span class="hljs-meta">&gt;&gt;&gt; </span>Post.objects.<span class="hljs-built_in">all</span>()
Traceback (most recent call last):
      File <span class="hljs-string">"&lt;console&gt;"</span>, line <span class="hljs-number">1</span>, <span class="hljs-keyword">in</span> &lt;module&gt;
NameError: name <span class="hljs-string">'Post'</span> <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> defined
</code></pre>
<p>Oops! An error showed up. It tells us that there is no Post. It's correct â we forgot to import it first!</p>
<p></p><p class="code-label">command-line</p><p></p>
<pre><code class="lang-python"><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> blog.models <span class="hljs-keyword">import</span> Post
</code></pre>
<p>We import the model <code>Post</code> from <code>blog.models</code>. Let's try displaying all posts again:</p>
<p></p><p class="code-label">command-line</p><p></p>
<pre><code class="lang-python"><span class="hljs-meta">&gt;&gt;&gt; </span>Post.objects.<span class="hljs-built_in">all</span>()
&lt;QuerySet [&lt;Post: my post title&gt;, &lt;Post: another post title&gt;]&gt;
</code></pre>
<p>This is a list of the posts we created earlier! We created these 
posts using the Django admin interface. But now we want to create new 
posts using Python, so how do we do that?</p>
<h3 id="create-object">Create object<a class="anchorjs-link " href="#create-object" aria-label="Anchor link for: create object" data-anchorjs-icon="#" style="padding-left: 0.375em;"></a></h3>
<p>This is how you create a new Post object in database:</p>
<p></p><p class="code-label">command-line</p><p></p>
<pre><code class="lang-python"><span class="hljs-meta">&gt;&gt;&gt; </span>Post.objects.create(author=me, title=<span class="hljs-string">'Sample title'</span>, text=<span class="hljs-string">'Test'</span>)
</code></pre>
<p>But we have one missing ingredient here: <code>me</code>. We need to pass an instance of <code>User</code> model as an author. How do we do that?</p>
<p>Let's import User model first:</p>
<p></p><p class="code-label">command-line</p><p></p>
<pre><code class="lang-python"><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> django.contrib.auth.models <span class="hljs-keyword">import</span> User
</code></pre>
<p>What users do we have in our database? Try this:</p>
<p></p><p class="code-label">command-line</p><p></p>
<pre><code class="lang-python"><span class="hljs-meta">&gt;&gt;&gt; </span>User.objects.<span class="hljs-built_in">all</span>()
&lt;QuerySet [&lt;User: ola&gt;]&gt;
</code></pre>
<p>This is the superuser we created earlier! Let's get an instance of the user now (adjust this line to use your own username):</p>
<p></p><p class="code-label">command-line</p><p></p>
<pre><code class="lang-python"><span class="hljs-meta">&gt;&gt;&gt; </span>me = User.objects.get(username=<span class="hljs-string">'ola'</span>)
</code></pre>
<p>As you can see, we now <code>get</code> a <code>User</code> with a <code>username</code> that equals 'ola'. Neat!</p>
<p>Now we can finally create our post:</p>
<p></p><p class="code-label">command-line</p><p></p>
<pre><code class="lang-python"><span class="hljs-meta">&gt;&gt;&gt; </span>Post.objects.create(author=me, title=<span class="hljs-string">'Sample title'</span>, text=<span class="hljs-string">'Test'</span>)
&lt;Post: Sample title&gt;
</code></pre>
<p>Hurray! Wanna check if it worked?</p>
<p></p><p class="code-label">command-line</p><p></p>
<pre><code class="lang-python"><span class="hljs-meta">&gt;&gt;&gt; </span>Post.objects.<span class="hljs-built_in">all</span>()
&lt;QuerySet [&lt;Post: my post title&gt;, &lt;Post: another post title&gt;, &lt;Post: Sample title&gt;]&gt;
</code></pre>
<p>There it is, one more post in the list!</p>
<h3 id="add-more-posts">Add more posts<a class="anchorjs-link " href="#add-more-posts" aria-label="Anchor link for: add more posts" data-anchorjs-icon="#" style="padding-left: 0.375em;"></a></h3>
<p>You can now have a little fun and add more posts to see how it works. Add two or three more and then go ahead to the next part.</p>
<h3 id="filter-objects">Filter objects<a class="anchorjs-link " href="#filter-objects" aria-label="Anchor link for: filter objects" data-anchorjs-icon="#" style="padding-left: 0.375em;"></a></h3>
<p>A big part of QuerySets is the ability to filter them. Let's say we want to find all posts that user ola authored. We will use <code>filter</code> instead of <code>all</code> in <code>Post.objects.all()</code>.
 In parentheses we state what condition(s) a blog post needs to meet to 
end up in our queryset. In our case, the condition is that <code>author</code> should be equal to <code>me</code>. The way to write it in Django is <code>author=me</code>. Now our piece of code looks like this:</p>
<p></p><p class="code-label">command-line</p><p></p>
<pre><code class="lang-python"><span class="hljs-meta">&gt;&gt;&gt; </span>Post.objects.<span class="hljs-built_in">filter</span>(author=me)
&lt;QuerySet [&lt;Post: Sample title&gt;, &lt;Post: Post number <span class="hljs-number">2</span>&gt;, &lt;Post: My 3rd post!&gt;, &lt;Post: 4th title of post&gt;]&gt;
</code></pre>
<p>Or maybe we want to see all the posts that contain the word 'title' in the <code>title</code> field?</p>
<p></p><p class="code-label">command-line</p><p></p>
<pre><code class="lang-python"><span class="hljs-meta">&gt;&gt;&gt; </span>Post.objects.<span class="hljs-built_in">filter</span>(title__contains=<span class="hljs-string">'title'</span>)
&lt;QuerySet [&lt;Post: Sample title&gt;, &lt;Post: 4th title of post&gt;]&gt;
</code></pre>
<blockquote class="clearfix alert alert-info"><strong class="fa fa-2x fa-edit"></strong>
<p> There are two underscore characters (<code>_</code>) between <code>title</code> and <code>contains</code>.
 Django's ORM uses this rule to separate field names ("title") and 
operations or filters ("contains"). If you use only one underscore, 
you'll get an error like "FieldError: Cannot resolve keyword 
title_contains".</p>
</blockquote>
<p>You can also get a list of all published posts. We do this by filtering all the posts that have <code>published_date</code> set in the past:</p>
<p></p><p class="code-label">command-line</p><p></p>
<pre><code class="lang-python"><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> django.utils <span class="hljs-keyword">import</span> timezone
<span class="hljs-meta">&gt;&gt;&gt; </span>Post.objects.<span class="hljs-built_in">filter</span>(published_date__lte=timezone.now())
&lt;QuerySet []&gt;
</code></pre>
<p>Unfortunately, the post we added from the Python console is not 
published yet. But we can change that! First get an instance of a post 
we want to publish:</p>
<p></p><p class="code-label">command-line</p><p></p>
<pre><code class="lang-python"><span class="hljs-meta">&gt;&gt;&gt; </span>post = Post.objects.get(title=<span class="hljs-string">"Sample title"</span>)
</code></pre>
<p>And then publish it with our <code>publish</code> method:</p>
<p></p><p class="code-label">command-line</p><p></p>
<pre><code class="lang-python"><span class="hljs-meta">&gt;&gt;&gt; </span>post.publish()
</code></pre>
<p>Now try to get list of published posts again (press the up arrow key three times and hit <code>enter</code>):</p>
<p></p><p class="code-label">command-line</p><p></p>
<pre><code class="lang-python"><span class="hljs-meta">&gt;&gt;&gt; </span>Post.objects.<span class="hljs-built_in">filter</span>(published_date__lte=timezone.now())
&lt;QuerySet [&lt;Post: Sample title&gt;]&gt;
</code></pre>
<h3 id="ordering-objects">Ordering objects<a class="anchorjs-link " href="#ordering-objects" aria-label="Anchor link for: ordering objects" data-anchorjs-icon="#" style="padding-left: 0.375em;"></a></h3>
<p>QuerySets also allow you to order the list of objects. Let's try to order them by <code>created_date</code> field:</p>
<p></p><p class="code-label">command-line</p><p></p>
<pre><code class="lang-python"><span class="hljs-meta">&gt;&gt;&gt; </span>Post.objects.order_by(<span class="hljs-string">'created_date'</span>)
&lt;QuerySet [&lt;Post: Sample title&gt;, &lt;Post: Post number <span class="hljs-number">2</span>&gt;, &lt;Post: My 3rd post!&gt;, &lt;Post: 4th title of post&gt;]&gt;
</code></pre>
<p>We can also reverse the ordering by adding <code>-</code> at the beginning:</p>
<p></p><p class="code-label">command-line</p><p></p>
<pre><code class="lang-python"><span class="hljs-meta">&gt;&gt;&gt; </span>Post.objects.order_by(<span class="hljs-string">'-created_date'</span>)
&lt;QuerySet [&lt;Post: 4th title of post&gt;,  &lt;Post: My 3rd post!&gt;, &lt;Post: Post number <span class="hljs-number">2</span>&gt;, &lt;Post: Sample title&gt;]&gt;
</code></pre>
<h3 id="complex-queries-through-method-chaining">Complex queries through method-chaining<a class="anchorjs-link " href="#complex-queries-through-method-chaining" aria-label="Anchor link for: complex queries through method chaining" data-anchorjs-icon="#" style="padding-left: 0.375em;"></a></h3>
<p>As you saw, some methods on <code>Post.objects</code> return a QuerySet.
The same methods can in turn also be called on a QuerySet,
and will then return a new QuerySet.
Thus,
you can combine their effect by <strong>chaining</strong> them together:</p>
<pre><code class="lang-python"><span class="hljs-meta">&gt;&gt;&gt; </span>Post.objects.<span class="hljs-built_in">filter</span>(published_date__lte=timezone.now()).order_by(<span class="hljs-string">'published_date'</span>)
&lt;QuerySet [&lt;Post: Post number <span class="hljs-number">2</span>&gt;, &lt;Post: My 3rd post!&gt;, &lt;Post: 4th title of post&gt;, &lt;Post: Sample title&gt;]&gt;
</code></pre>
<p>This is really powerful and lets you write quite complex queries.</p>
<p>Cool! You're now ready for the next part! To close the shell, type this:</p>
<p></p><p class="code-label">command-line</p><p></p>
<pre><code class="lang-python"><span class="hljs-meta">&gt;&gt;&gt; </span>exit()
$
</code></pre>

                                
                                </section>
                            
    </div>
    <div class="search-results">
        <div class="has-results">
            
            <h1 class="search-results-title" id="results-matching"><span class="search-results-count"></span> results matching "<span class="search-query"></span>"<a class="anchorjs-link " href="#results-matching" aria-label="Anchor link for: results matching" data-anchorjs-icon="#" style="padding-left: 0.375em;"></a></h1>
            <ul class="search-results-list"></ul>
            
        </div>
        <div class="no-results">
            
            <h1 class="search-results-title" id="no-results-matching">No results matching "<span class="search-query"></span>"<a class="anchorjs-link " href="#no-results-matching" aria-label="Anchor link for: no results matching" data-anchorjs-icon="#" style="padding-left: 0.375em;"></a></h1>
            
        </div>
    </div>
</div>

                        </div>
                    </div>
                
            </div>

            
                
                <a href="https://tutorial.djangogirls.org/en/html/" class="navigation navigation-prev " aria-label="Previous page: Introduction to HTML">
                    <i class="fa fa-angle-left"></i>
                </a>
                
                
                <a href="https://tutorial.djangogirls.org/en/dynamic_data_in_templates/" class="navigation navigation-next " aria-label="Next page: Dynamic data in templates" style="margin-right: 17px;">
                    <i class="fa fa-angle-right"></i>
                </a>
                
            
        
    </div>

    <script>
        var gitbook = gitbook || [];
        gitbook.push(function() {
            gitbook.page.hasChanged({"page":{"title":"Django ORM (Querysets)","level":"1.18","depth":1,"next":{"title":"Dynamic data in templates","level":"1.19","depth":1,"path":"dynamic_data_in_templates/README.md","ref":"dynamic_data_in_templates/README.md","articles":[]},"previous":{"title":"Introduction to HTML","level":"1.17","depth":1,"path":"html/README.md","ref":"html/README.md","articles":[]},"dir":"ltr"},"config":{"plugins":["heading-anchors@1.0.3","ga@1.0.1","richquotes@0.0.9","github@2.0.0","language-picker","sidebar-ad","codeblock-label","sectionx-ex","collapsible-menu"],"styles":{"website":"styles/website.css","pdf":"styles/pdf.css","epub":"styles/epub.css","mobi":"styles/mobi.css","ebook":"styles/ebook.css","print":"styles/print.css"},"pluginsConfig":{"collapsible-menu":{},"language-picker":{"grid-columns":3},"github":{"url":"https://github.com/DjangoGirls/tutorial"},"codeblock-label":{},"search":{},"lunr":{"maxIndexSize":1000000,"ignoreSpecialCharacters":false},"sectionx-ex":{},"fontsettings":{"theme":"white","family":"sans","size":2},"richquotes":{"default":false},"sectionx":{"tag":"b"},"heading-anchors":{},"sidebar-ad":{"imageUrl":"https://djangogirls.org/static/img/global/donate/lagos.jpg","url":"https://www.patreon.com/djangogirls","description":"ð Support our work and donate to our project! â¨","btnText":"Donate now!"},"highlight":{},"ga":{"configuration":"auto","token":"UA-51680040-3"},"theme-default":{"styles":{"website":"styles/website.css","pdf":"styles/pdf.css","epub":"styles/epub.css","mobi":"styles/mobi.css","ebook":"styles/ebook.css","print":"styles/print.css"},"showLevel":false}},"theme":"default","pdf":{"pageNumbers":true,"fontSize":12,"fontFamily":"Arial","paperSize":"a4","chapterMark":"pagebreak","pageBreaksBefore":"/","margin":{"right":62,"left":62,"top":56,"bottom":56},"embedFonts":false},"structure":{"langs":"LANGS.md","readme":"README.md","glossary":"GLOSSARY.md","summary":"SUMMARY.md"},"variables":{"py_version":"3.8","py_release":"3.8.6","py_min_version":"3.6","py_min_release":"3.6.8","pa_py_version":"3.8","django_version":"2.2.4"},"language":"en","links":{"sidebar":{"Need help? Talk to us!":"https://gitter.im/DjangoGirls/tutorial"}},"gitbook":"*"},"file":{"path":"django_orm/README.md","mtime":"2021-04-17T16:15:27.764Z","type":"markdown"},"gitbook":{"version":"3.6.20","time":"2021-04-17T16:15:47.922Z"},"basePath":"..","book":{"language":"en"}});
        });
    </script>
</div>

        
    <noscript>
        <style>
            .honkit-cloak {
                display: block !important;
            }
        </style>
    </noscript>
    <script>
        // Restore sidebar state as critical path for prevent layout shift
        function __init__getSidebarState(defaultValue){
            var baseKey = "";
            var key = baseKey + ":sidebar";
            try {
                var value = localStorage[key];
                if (value === undefined) {
                    return defaultValue;
                }
                var parsed = JSON.parse(value);
                return parsed == null ? defaultValue : parsed;
            } catch (e) {
                return defaultValue;
            }
        }
        function __init__restoreLastSidebarState() {
            var isMobile = window.matchMedia("(max-width: 600px)").matches;
            if (isMobile) {
                // Init last state if not mobile
                return;
            }
            var sidebarState = __init__getSidebarState(true);
            var book = document.querySelector(".book");
            // Show sidebar if it enabled
            if (sidebarState && book) {
                book.classList.add("without-animation", "with-summary");
            }
        }

        try {
            __init__restoreLastSidebarState();
        } finally {
            var book = document.querySelector(".book");
            book.classList.remove("honkit-cloak");
        }
    </script>
    <script src="Django%20ORM%20(Querysets)%20%C2%B7%20HonKit_files/gitbook.js"></script>
    <script src="Django%20ORM%20(Querysets)%20%C2%B7%20HonKit_files/theme.js"></script>
    
        
        <script src="Django%20ORM%20(Querysets)%20%C2%B7%20HonKit_files/anchor.js"></script>
        
    
        
        <script src="Django%20ORM%20(Querysets)%20%C2%B7%20HonKit_files/anchor-style.js"></script>
        
    
        
        <script src="Django%20ORM%20(Querysets)%20%C2%B7%20HonKit_files/plugin.htm"></script>
        
    
        
        <script src="Django%20ORM%20(Querysets)%20%C2%B7%20HonKit_files/plugin.js"></script>
        
    
        
        <script src="Django%20ORM%20(Querysets)%20%C2%B7%20HonKit_files/plugin_002.js"></script>
        
    
        
        <script src="Django%20ORM%20(Querysets)%20%C2%B7%20HonKit_files/bootstrap.js"></script>
        
    
        
        <script src="Django%20ORM%20(Querysets)%20%C2%B7%20HonKit_files/sectionx.js"></script>
        
    
        
        <script src="Django%20ORM%20(Querysets)%20%C2%B7%20HonKit_files/plugin_003.js"></script>
        
    
        
        <script src="Django%20ORM%20(Querysets)%20%C2%B7%20HonKit_files/search-engine.js"></script>
        
    
        
        <script src="Django%20ORM%20(Querysets)%20%C2%B7%20HonKit_files/search.js"></script>
        
    
        
        <script src="Django%20ORM%20(Querysets)%20%C2%B7%20HonKit_files/lunr.js"></script>
        
    
        
        <script src="Django%20ORM%20(Querysets)%20%C2%B7%20HonKit_files/search-lunr.js"></script>
        
    
        
        <script src="Django%20ORM%20(Querysets)%20%C2%B7%20HonKit_files/fontsettings.js"></script>
        
    

    


</body></html>